name: Tests

on: [push, pull_request]

env:
  build-folder: build
  cppstd: 17
  python-version: 3.9

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: Windows MSVC 2019 x86 64 Debug ClangCL MDd,
              os: windows-latest,
              build_type: Debug,
              install: '-s arch_target=x86_64
                -s compiler.version=16 -s compiler="Visual Studio"
                -s compiler.toolset=ClangCL -s compiler.runtime=MDd
                -e CC=clang-cl
                -e CXX=clang-cl',
            }
          - {
              name: Windows MSVC 2019 x86 64 RelWithDebInfo ClangCL MD,
              os: windows-latest,
              build_type: RelWithDebInfo,
              install: '-s arch_target=x86_64
                -s compiler.version=16 -s compiler="Visual Studio"
                -s compiler.toolset=ClangCL -s compiler.runtime=MD
                -e CC=clang-cl
                -e CXX=clang-cl',
            }

          - {
              name: Windows Clang 12 x86 64 Debug MDd,
              os: windows-latest,
              build_type: Debug,
              install: '-s arch_target=x86_64
                -s compiler.version=12 -s compiler=clang
                -s compiler.libcxx=libstdc++11 -s compiler.runtime=MDd
                -e CC="C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/Llvm/x64/bin/clang"
                -e CXX="C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/Llvm/x64/bin/clang++"
                -e CONAN_CMAKE_GENERATOR=Ninja',
            }
          - {
              name: Windows Clang 12 x86 64 RelWithDebInfo MD,
              os: windows-latest,
              build_type: RelWithDebInfo,
              install: '-s arch_target=x86_64
                -s compiler.version=12 -s compiler=clang
                -s compiler.libcxx=libstdc++11 -s compiler.runtime=MD
                -e CC="C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/Llvm/x64/bin/clang"
                -e CXX="C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/Llvm/x64/bin/clang++"
                -e CONAN_CMAKE_GENERATOR=Ninja',
            }

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Install requirements
        run: python -m pip install --upgrade pip conan

      - name: Install dependencies
        run: conan install . -g cmake -if ${{ env.build-folder }} -b outdated
          -s compiler.cppstd=${{ env.cppstd }} -s build_type=${{ matrix.config.build_type }}
          ${{ matrix.config.install }}

      - name: Build
        run: conan build . -bf ${{ env.build-folder }}
